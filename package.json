{
  "name": "excella-central",
  "version": "1.0.0",
  "author": "Excella Labs",
  "homepage": "https://central.excellalabs.com/",
  "private": true,
  "config": {
    "imageRepo":
      "090999229429.dkr.ecr.us-east-1.amazonaws.com/excella-central-web",
    "imageName": "excella-central-web",
    "imagePort": "8080",
    "awsRegion": "us-east-1",
    "awsEcsCluster": "excella-prod-ecs-cluster",
    "awsService": "excella-central-web"
  },
  "scripts": {
    "clean": "ionic-app-scripts clean",
    "build": "ionic-app-scripts build",
    "lint": "ionic-app-scripts lint",
    "ionic:build": "ionic-app-scripts build",
    "ionic:serve": "ionic-app-scripts serve",
    "test": "karma start ./test-config/karma.conf.js",
    "test-debug":
      "karma start ./test-config/karma.conf.js --auto-watch --no-single-run",
    "test-ci": "karma start ./test-config/karma.conf.js --single-run",
    "test-coverage": "karma start ./test-config/karma.conf.js --coverage",
    "e2e": "npm run e2e-update && npm run e2e-test",
    "e2e-test": "protractor ./test-config/protractor.conf.js",
    "e2e-update": "webdriver-manager update --standalone false --gecko false",

    "docker:buildHelper":
      "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "docker:build":
      "ionic cordova build browser --release && npm run docker:buildHelper",
    "postdocker:build": "npm run docker:tag",
    "docker:tag":
      "cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:run": "run-s -c docker:clean docker:runHelper",
    "docker:runHelper":
      "cross-conf-env docker run -e NODE_ENV=local --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:3000 $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` is correct.",
    "docker:publish":
      "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish":
      "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_config_imageName",
    "predocker:taillogs": "echo Web Server Logs:",
    "docker:taillogs":
      "cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:open:win":
      "echo Trying to launch on Windows && timeout 2 && start http://localhost:%npm_package_config_imagePort%",
    "docker:open:mac":
      "echo Trying to launch on MacOS && sleep 2 && URL=http://localhost:$npm_package_config_imagePort && open $URL",
    "docker:debugmessage":
      "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "predocker:debug": "run-s -c docker:build docker:run",
    "docker:debug":
      "run-s -cs docker:open:win docker:open:mac docker:debugmessage docker:taillogs",
    "aws:login:win":
      "cross-conf-env aws ecr get-login --no-include-email --region $npm_package_config_awsRegion > dockerLogin.cmd && call dockerLogin.cmd && del dockerLogin.cmd",
    "aws:login:mac":
      "eval $(aws ecr get-login --no-include-email --region $npm_package_config_awsRegion)",
    "aws:login": "run-p -cs aws:login:win aws:login:mac",
    "aws:deploy":
      "cross-conf-env docker run --env-file ./.env silintl/ecs-deploy -c $npm_package_config_awsEcsCluster -n $npm_package_config_awsService -i $npm_package_config_imageRepo:latest -r $npm_package_config_awsRegion --timeout 1000",
    "aws:release": "run-s -cs aws:login docker:publish aws:deploy"
  },
  "dependencies": {
    "@angular/common": "4.4.3",
    "@angular/compiler": "4.4.3",
    "@angular/compiler-cli": "4.4.3",
    "@angular/core": "4.4.3",
    "@angular/forms": "4.4.3",
    "@angular/http": "4.4.3",
    "@angular/platform-browser": "4.4.3",
    "@angular/platform-browser-dynamic": "4.4.3",
    "@cloudinary/angular-4.x": "^1.1.0",
    "@ionic-native/core": "4.3.0",
    "@ionic-native/splash-screen": "4.3.0",
    "@ionic-native/status-bar": "4.3.0",
    "@ionic/storage": "2.0.1",
    "cloudinary-core": "^2.4.0",
    "cordova-android": "6.4.0",
    "cordova-browser": "5.0.3",
    "cordova-ios": "4.5.4",
    "cordova-plugin-device": "^1.1.7",
    "cordova-plugin-ionic": "~2.0.4",
    "cordova-plugin-ionic-webview": "^1.1.16",
    "cordova-plugin-splashscreen": "^4.1.0",
    "cordova-plugin-statusbar":
      "https://github.com/apache/cordova-plugin-statusbar.git",
    "cordova-plugin-whitelist": "^1.3.3",
    "cordova-sqlite-storage": "^2.1.2",
    "ionic-angular": "3.7.1",
    "ionic-plugin-keyboard": "^2.2.1",
    "ionicons": "3.0.0",
    "rxjs": "5.4.3",
    "sw-toolbox": "3.6.0",
    "web": "0.0.2",
    "zone.js": "0.8.18"
  },
  "devDependencies": {
    "@ionic/app-scripts": "3.0.0",
    "@types/jasmine": "^2.8.0",
    "@types/node": "^8.0.51",
    "angular2-template-loader": "^0.6.2",
    "cross-conf-env": "^1.1.2",
    "html-loader": "^0.5.1",
    "istanbul-instrumenter-loader": "^3.0.0",
    "jasmine": "^2.8.0",
    "jasmine-spec-reporter": "^4.2.1",
    "karma": "^1.7.1",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage-istanbul-reporter": "^1.3.0",
    "karma-jasmine": "^1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.6",
    "npm-run-all": "^4.1.2",
    "null-loader": "^0.1.1",
    "protractor": "^5.2.0",
    "ts-loader": "^3.1.1",
    "ts-node": "^3.3.0",
    "typescript": "2.3.4",
    "with-package": "^0.2.0"
  },
  "description": "",
  "cordova": {
    "platforms": ["ios", "android", "browser"],
    "plugins": {
      "ionic-plugin-keyboard": {},
      "cordova-plugin-whitelist": {},
      "cordova-plugin-statusbar": {},
      "cordova-plugin-device": {},
      "cordova-plugin-splashscreen": {},
      "cordova-plugin-ionic-webview": {},
      "cordova-sqlite-storage": {},
      "cordova-plugin-ionic": {
        "APP_ID": "ec3bc509",
        "CHANNEL_NAME": "Production",
        "UPDATE_METHOD": "background"
      }
    }
  }
}
